//[ublas_main
int main()
{{
    outfile.open("{out_filename}", ofstream::out);
    // time parameters
    double tini,tend,tstep;
    tini = 0.0;
    tend = {tfin}; // Final time, s
    tstep = {dt}; // Timestep, s

    // Convergence Parameters
    {convergence}

    state_type x({species});
    for (boost::numeric::ublas::vector<double>::const_iterator i = x.begin(); i != x.end(); ++i){{
        x[*i] = 0.0;
    }}

    // Initial concentrations
    {concentrations}

    // Run the solver
    typedef runge_kutta_dopri5< state_type > stepper_type;
    integrate_adaptive(make_controlled(atol, rtol, stepper_type()), model() , x ,
                     tini , tend , tstep , write_cout );
    outfile.close();
    return 0;
}}
//]
