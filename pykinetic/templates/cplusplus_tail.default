//[ublas_main
int main()
{{
    outfile.open("{out_filename}", ofstream::out);
    // time parameters
    double tini,tend,tstep,trep;
    tini = 0.0;
    tend = {tfin}; // Final time, s
    tstep = {dt}; // Timestep, s
    trep = {trep}; // Timestep to report, s

    // Convergence Parameters
    {convergence}

    state_type x({species});
    for (boost::numeric::ublas::vector<double>::const_iterator i = x.begin(); i != x.end(); ++i){{
        x[*i] = 0.0;
    }}
    
    // Initial concentrations: 
    {concentrations}

    // Run the solver
    typedef dense_output_runge_kutta<controlled_runge_kutta<runge_kutta_dopri5<state_type> > > stepper_type;
    integrate_const(stepper_type(), model, x, tini, tend, trep, write_cout);
    outfile.close();
    return 0;
}}
//]
